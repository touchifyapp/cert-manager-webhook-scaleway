name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go mod download

    - name: Prepare testdata
      env:
        ORGANIZATION_ID: ${{ secrets.SCW_ORGANIZATION_ID }}
        SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      run: |
        sed -i -e "s/ORGANIZATION_ID_FROM_SCALEWAY/$ORGANIZATION_ID/" testdata/scaleway-solver/config.json
        sed -i -e "s/SECRET_KEY_FROM_SCALEWAY/$SECRET_KEY/" testdata/scaleway-solver/secretkey.yml

    - name: Run tests
      env:
        TEST_ZONE_NAME: ${{ secrets.SCW_DNS_ZONE }}.
      run: make verify

    - name: Clean DNS Zone
      if: ${{ always() }}
      env:
        SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        DNS_ZONE: ${{ secrets.SCW_DNS_ZONE }}
      run: |
        curl -X DELETE \
          -H "X-Auth-Token: $SECRET_KEY" \
          https://api.scaleway.com/domain/v2alpha2/dns-zones/$DNS_ZONE/records

        curl -X PUT \
          -H "X-Auth-Token: $SECRET_KEY" \
          -d '{"ns": [{"name": "ns0.dom.scw.cloud.", "ip": []},{"name": "ns1.dom.scw.cloud.", "ip": []}]}' \
          https://api.scaleway.com/domain/v2alpha2/dns-zones/$DNS_ZONE/nameservers

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Build docker image
        run: make build
