package scaleway

import (
	"context"

	Client "github.com/touchifyapp/cert-manager-webhook-scaleway/scaleway/client"

	"github.com/jetstack/cert-manager/pkg/acme/webhook/apis/acme/v1alpha1"
	"github.com/jetstack/cert-manager/pkg/issuer/acme/dns/util"
)

// CreateTXTRecord adds a TXT record in Scaleway
func (d *DNSClient) CreateTXTRecord(ch *v1alpha1.ChallengeRequest) error {
	zone, err := d.GetBestDNSZone(ch)
	if err != nil {
		return err
	}

	domain := util.UnFqdn(ch.ResolvedFQDN)
	subdomain := getSubDomain(zone, domain)

	recordTTL := float32(60)
	recordType := Client.ScalewayDomainV2alpha2RecordType("TXT")
	recordComment := Client.GoogleProtobufStringValue("generated by cert-manager-webhook-scaleway")

	res, err := d.client.UpdateDNSZoneRecords(context.Background(), zone, Client.UpdateDNSZoneRecordsJSONRequestBody{
		Changes: &[]Client.ScalewayDomainV2alpha2RecordChange{
			Client.ScalewayDomainV2alpha2RecordChange{
				Add: &struct {
					Records *[]Client.ScalewayDomainV2alpha2Record `json:"records,omitempty"`
				}{
					Records: &[]Client.ScalewayDomainV2alpha2Record{
						Client.ScalewayDomainV2alpha2Record{
							Name:    &subdomain,
							Data:    &ch.Key,
							Ttl:     &recordTTL,
							Type:    &recordType,
							Comment: &recordComment,
						},
					},
				},
			},
		},
	})

	err = validateResponse(err, res)
	if err != nil {
		return err
	}

	return nil
}

// DeleteTXTRecord deletes a TXT record from Scaleway
func (d *DNSClient) DeleteTXTRecord(ch *v1alpha1.ChallengeRequest) error {
	zone, err := d.GetBestDNSZone(ch)
	if err != nil {
		return err
	}

	domain := util.UnFqdn(ch.ResolvedFQDN)
	subdomain := getSubDomain(zone, domain)

	recordType := Client.ScalewayDomainV2alpha2RecordType("TXT")

	res, err := d.client.UpdateDNSZoneRecords(context.Background(), zone, Client.UpdateDNSZoneRecordsJSONRequestBody{
		Changes: &[]Client.ScalewayDomainV2alpha2RecordChange{
			Client.ScalewayDomainV2alpha2RecordChange{
				Delete: &struct {
					Data *string                                  `json:"data,omitempty"`
					Name *string                                  `json:"name,omitempty"`
					Type *Client.ScalewayDomainV2alpha2RecordType `json:"type,omitempty"`
				}{
					Name: &subdomain,
					Data: &ch.Key,
					Type: &recordType,
				},
			},
		},
	})

	err = validateResponse(err, res)
	if err != nil {
		return err
	}

	return nil
}
